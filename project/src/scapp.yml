version: "3"
services:     # list all services for your application
  # database of users
  users-db:
    # image name
    image: users-db:latest
    environment: 
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    ports: ["3001:5984"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # database of catalog
  catalog-db:
    # image name
    image: catalog-db:latest
    environment: 
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
      - REACT_APP_STORAGESASTOKEN=sv=2020-08-04&ss=b&srt=sco&sp=rwdlactfx&se=2021-12-14T05:08:30Z&st=2021-12-13T21:08:30Z&spr=https&sig=OollD0w7eyCQMzv8cyHaOYU6sVRVZMznS%2F8EXu%2BUSic%3D
      - REACT_APP_STORAGERESOURCENAME=csb10032001a19bea0a
    ports: ["3003:5984"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # database of shopping-kart
  logs-db:
    # image name
    image: logs-db:latest
    environment: 
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    ports: ["3009:5984"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # database of shopping-kart
  shopping-db:
    # image name
    image: shopping-db:latest
    environment: 
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    ports: ["3004:5984"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # server that listens HTTP requests
  history-db:
    # image name
    image: history-db:latest
    environment: 
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    ports: ["3007:5984"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # server that listens HTTP requests
  history-daemon:
    image: history-be:latest
    # link both services (same effect of option --link in docker run)
    depends_on: [ "history-db" ]
    # expose port number 3002 of host running this service
    environment:
      REACT_APP_AUTH_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3002
      REACT_APP_CATALOG_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3005
      REACT_APP_SHOPKART_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3006
      REACT_APP_LOGS_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3010
    ports: [ "3008:80" ]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: [ "scapp-net" ]
  # server that listens HTTP requests
  logs-daemon:
    image: logs-be:latest
    # link both services (same effect of option --link in docker run)
    depends_on: [ "logs-db" ]
    # expose port number 3002 of host running this service
    environment:
      REACT_APP_AUTH_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3002
      REACT_APP_CATALOG_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3005
      REACT_APP_SHOPKART_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3006
      REACT_APP_LOGS_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3010
    ports: [ "3010:80" ]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: [ "scapp-net" ]
  # server that listens HTTP requests
  users-daemon:
    image: scapp-be:latest
    # link both services (same effect of option --link in docker run)
    depends_on: [ "users-db" ]
    # expose port number 3002 of host running this service
    environment:
      REACT_APP_AUTH_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3002
      REACT_APP_CATALOG_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3005
      REACT_APP_SHOPKART_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3006
      REACT_APP_LOGS_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3010
    ports: [ "3002:80" ]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: [ "scapp-net" ]
  # server that listens HTTP requests
  shopping-daemon:
    image: shopping-be:latest
    # link both services (same effect of option --link in docker run)
    depends_on: [ "shopping-db" ]
    # expose port number 3004 of host running this service
    environment:
      REACT_APP_AUTH_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3002
      REACT_APP_CATALOG_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3005
      REACT_APP_SHOPKART_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3006
      REACT_APP_LOGS_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3010
    ports: [ "3006:80" ]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: [ "scapp-net" ]
  # server that listens HTTP requests
  
  catalog-daemon:
    image: catalog-be:latest
    # link both services (same effect of option --link in docker run)
    depends_on: [ "catalog-db" ]
    # expose port number 3005 of host running this service
    environment:
      REACT_APP_AUTH_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3002
      REACT_APP_CATALOG_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3005
      REACT_APP_SHOPKART_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3006
      REACT_APP_LOGS_SERVICE_URL: http://cloud-romtourpe.westeurope.cloudapp.azure.com:3010
    ports: [ "3005:80" ]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: [ "scapp-net" ]
  front-end:
    # image name
    image: scapp-fe:latest
    environment:
      REACT_APP_AUTH_SERVICE_URL: "http://cloud-romtourpe.westeurope.cloudapp.azure.com:3002"
      REACT_APP_CATALOG_SERVICE_URL: "http://cloud-romtourpe.westeurope.cloudapp.azure.com:3005"
      REACT_APP_SHOPKART_SERVICE_URL: "http://cloud-romtourpe.westeurope.cloudapp.azure.com:3006"
      REACT_APP_HISTORY_SERVICE_URL: "http://cloud-romtourpe.westeurope.cloudapp.azure.com:3008"
      REACT_APP_LOGS_SERVICE_URL: "http://cloud-romtourpe.westeurope.cloudapp.azure.com:3010"
    ports: ["3000:80"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  
  # Docker GUI for swarms
  visualizer:
    image: dockersamples/visualizer:stable
    ports: [ "80:8080" ]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      # locate this service in the swarm manager
      placement:
        constraints:
          - node.role == manager
    networks: [ "scapp-net" ]
networks:
  scapp-net:
    external: true
